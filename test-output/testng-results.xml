<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-29T16:00:42 IST" name="Suite" finished-at="2024-09-29T16:01:23 IST" duration-ms="40671">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidation.LoginErrorValidation()[pri:0, instance:standalone.ErrorValidation@6995bf68]" name="LoginErrorValidation" class="standalone.ErrorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="submitOrder.submitOrder(java.util.HashMap)[pri:0, instance:standalone.submitOrder@2b76ff4e]" name="submitOrder" class="standalone.submitOrder"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-09-29T16:00:42 IST" name="Errorvalidation" finished-at="2024-09-29T16:01:05 IST" duration-ms="22813">
      <class name="standalone.ErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:00:42 IST" name="launchApplication" finished-at="2024-09-29T16:00:50 IST" duration-ms="7235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:00:50 IST" name="LoginErrorValidation" finished-at="2024-09-29T16:00:54 IST" duration-ms="4787" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at standalone.ErrorValidation.LoginErrorValidation(ErrorValidation.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:00:55 IST" name="tearDown" finished-at="2024-09-29T16:00:55 IST" duration-ms="523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:00:55 IST" name="launchApplication" finished-at="2024-09-29T16:01:01 IST" duration-ms="5941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:01:01 IST" name="ProductErrorValidation" finished-at="2024-09-29T16:01:05 IST" duration-ms="3628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:standalone.ErrorValidation@6995bf68]" started-at="2024-09-29T16:01:05 IST" name="tearDown" finished-at="2024-09-29T16:01:05 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- standalone.ErrorValidation -->
    </test> <!-- Errorvalidation -->
    <test started-at="2024-09-29T16:00:42 IST" name="Submit Order Test" finished-at="2024-09-29T16:01:23 IST" duration-ms="40671">
      <class name="standalone.submitOrder">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:00:43 IST" name="launchApplication" finished-at="2024-09-29T16:00:54 IST" duration-ms="11081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:00:54 IST" name="submitOrder" data-provider="getData" finished-at="2024-09-29T16:01:02 IST" duration-ms="8568" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Anirudha12@, product=ZARA COAT 3, email=abcxyz@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:02 IST" name="tearDown" finished-at="2024-09-29T16:01:03 IST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:03 IST" name="launchApplication" finished-at="2024-09-29T16:01:04 IST" duration-ms="1699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:04 IST" name="submitOrder" data-provider="getData" finished-at="2024-09-29T16:01:15 IST" duration-ms="10351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:15 IST" name="tearDown" finished-at="2024-09-29T16:01:15 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:15 IST" name="launchApplication" finished-at="2024-09-29T16:01:18 IST" duration-ms="3635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistory()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:18 IST" name="OrderHistory" finished-at="2024-09-29T16:01:23 IST" depends-on-methods="standalone.submitOrder.submitOrder" duration-ms="4352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:standalone.submitOrder@2b76ff4e]" started-at="2024-09-29T16:01:23 IST" name="tearDown" finished-at="2024-09-29T16:01:23 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- standalone.submitOrder -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
